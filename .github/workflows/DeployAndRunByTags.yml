name: Deploy and Run
env:
  REPO_NAME: ${{ github.event.repository.name }}
on:
  push:
    tags: ['v*.*.*']
permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v4.2.1
      
    - name: 'Get Tag'
      id: tag
      uses: devops-actions/actions-get-tag@v1.0.3

    - name: 'Login via Docker'
      uses: azure/docker-login@v2
      with:
        login-server: ${{ secrets.ACR_NAME }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - run: |
        docker build -t ${{ secrets.ACR_NAME }}/${{env.REPO_NAME}}:${{ steps.tag.outputs.tag }} -f ./app/Dockerfile ./app
        docker push ${{ secrets.ACR_NAME }}/${{env.REPO_NAME}}:${{ steps.tag.outputs.tag }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
    - name: 'Login via Azure CLI'
      uses: azure/login@v2.2.0
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: 'Get Tag'
      id: tag
      uses: devops-actions/actions-get-tag@v1.0.3
    
    - name: 'deploy Container Instance'
      uses: azure/aci-deploy@v1.1.3
      with:
        location: eastus
        name: flask-estructura
        resource-group: recurso-aplicada
        image: ${{ secrets.ACR_NAME }}/${{env.REPO_NAME}}:${{ steps.tag.outputs.tag }}
        dns-name-label: flask-estructura-${{ github.run_id }}-${{ steps.tag.outputs.tag }}
        registry-username: ${{ secrets.REGISTRY_USERNAME }}
        registry-password: ${{ secrets.REGISTRY_PASSWORD }}
        ports: 5000
        cpu: 1
        memory: 1
    
    - name: 'logout'
      run: |
        az logout
